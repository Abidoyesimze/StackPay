version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: stackspay-postgres
    environment:
      POSTGRES_DB: stackspay
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stackspay-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: stackspay-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stackspay-network

  # StackPay Backend API
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: stackspay-backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: stackspay
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://redis:6379
      STACKS_NETWORK: testnet
      STACKS_API_URL: https://api.testnet.hiro.so
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      MIN_CONFIRMATIONS: 3
      INVOICE_EXPIRY_MINUTES: 30
      PAYMENT_POLL_INTERVAL_MS: 10000
      BTC_PRICE_API: https://api.coinbase.com/v2/exchange-rates?currency=BTC
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - stackspay-network
    restart: unless-stopped

  # Payment Monitor Worker
  payment-monitor:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: stackspay-payment-monitor
    command: ["node", "dist/workers/payment-monitor.js"]
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: stackspay
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://redis:6379
      STACKS_NETWORK: testnet
      STACKS_API_URL: https://api.testnet.hiro.so
      MIN_CONFIRMATIONS: 3
      PAYMENT_POLL_INTERVAL_MS: 10000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - stackspay-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  stackspay-network:
    driver: bridge
