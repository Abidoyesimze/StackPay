version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: stackspay-postgres
    environment:
      POSTGRES_DB: stackspay
      POSTGRES_USER: stackspay
      POSTGRES_PASSWORD: stackspay_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stackspay -d stackspay"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: stackspay-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: stackspay-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://stackspay:stackspay_password@postgres:5432/stackspay
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - API_KEY_SECRET=dev-api-secret-change-in-production
      - STACKS_NETWORK=testnet
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app/apps/backend
      - /app/node_modules
    restart: unless-stopped

  # Dashboard (Development)
  dashboard:
    build:
      context: .
      dockerfile: apps/dashboard/Dockerfile.dev
    container_name: stackspay-dashboard
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_STACKS_NETWORK=testnet
    depends_on:
      - backend
    volumes:
      - ./apps/dashboard:/app/apps/dashboard
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: stackspay-network
